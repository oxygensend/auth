name: Build

on:
  push:
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to checkout and assemble"
        required: true
        default: "main"
      runs-on:
        required: false
        type: string
        description: The self-hosted runner to use
        default: 'linux'
jobs:
#  checkstyle:
#    runs-on: 'ubuntu-latest'
#    permissions: write-all
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.event.inputs.branch }}
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: 'corretto'
#          cache: 'maven'
#      - name: Run checkstyle
#        id: checkstyle
#        run: mvn checkstyle:check
#      - name: Create checkstyle report
#        if: always()
#        uses: jwgmeligmeyling/checkstyle-github-action@master
#        with:
#          path: target/checkstyle-result.xml
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'maven'
      - name: Restore or Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven
      - name: Build with Maven
        run: mvn clean package -DskipTests -Pall
  unit-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'maven'
      - name: Run unit tests
        run: |
          mvn test -Pall -DskipJacocoReport
      - name: Upload jacoco exec results
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-jacoco
          path: 'coverage/target/*-unit-tests-jacoco.exec'

  integration-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'maven'
      - name: Restore Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven
      - name: Run integration tests
        run: mvn verify -DskipUnitTests -DskipJacocoReport -Pall
      - name: Upload jacoco exec results
        uses: actions/upload-artifact@v4
        with:
          name: integration-tests-jacoco
          path: 'coverage/target/*-integration-tests-jacoco.exec'

  generate-jacoco-report:
    runs-on: ubuntu-latest
    needs: [ unit-test, integration-tests ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'maven'
      - name: Restore Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven
      - uses: actions/download-artifact@v4
        with:
          name: integration-tests-jacoco
          path: coverage/target
      - uses: actions/download-artifact@v4
        with:
          name: unit-tests-jacoco
          path: coverage/target
      - name: generate report
        run: |
          mvn jacoco:report-aggregate@jacoco-site-aggregate -Pall
      - name: Upload jacoco coverage report
        uses: actions/upload-artifact@v4
        with:
          name: JaCoCo coverage result
          path: coverage/target/site/jacoco-aggregate/
          retention-days: 14
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: ./coverage/target/site/jacoco-aggregate/jacoco.csv
          generate-coverage-badge: true
          generate-branches-badge: true
      - name: Log coverage percentage
        working-directory: .
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            unit-tests-jacoco
            integration-tests-jacoco