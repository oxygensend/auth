security:
  token:
    expiration:
      access: 3600s
      refresh: 86400s
      password-reset: 2d
      email-verification: 5d


server:
  port: 9002
  tomcat:
    accesslog:
      max-days: 5
      directory: log/access
      enabled: true
spring:
  application:
    name: auth-service
  profiles:
    active: mongo
  threads:
    virtual:
      enabled: true
  data:
    mongodb:
      auto-index-creation: true


eureka:
  client:
    enabled: true

    fetch-registry: true
    register-with-eureka: true


auth:
  settings:
    sign-in:
      only-admins-can-create-users: true
      require-admin-validation: false
      require-email-validation: true
      account-activation: none
    user-role-feature:
      enabled: true
    identity: email
    roles:
      - ROLE_USER
      - ROLE_ADMIN
    event-broker: internal

kafka:
  securityProtocol: SASL_SSL
  saslMechanism: SCRAM-SHA-512
  retry-backoff-in-ms: 100
  retries: 5
  ssl:
    #    keyStore: ${server.ssl.keystore}
    #    keyStoreType: ${server.ssl.keystoretype}
    #    keyStorePassword: ${server.ssl.keystorepassword}
    #    keyPassword: ${server.ssl.keypassword}
    #    trustStore: ${server.ssl.truststore}
    #    trustStorePassword: ${server.ssl.truststorepassword}
    #    trustStoreType: ${server.ssl.truststoretype}
    enabled: false


management:
  health:
    defaults:
      enabled: false
    mongo:
      enabled: true
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: false
  endpoints:
    web:
      base-path: /manage
      exposure:
        include: "health,info"


logging:
  logback:
    rollingpolicy:
      max-history: 5
    compression-type: zip
